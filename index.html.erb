<head>
  <title><%= title %></title>
  <script src="d3.v3.js" charset="utf-8"></script>
  <link rel="stylesheet" href="style.css" type="text/css"></link>
</head>
<body>
  <!--
    TODO: want to embed these into this - but height/width getting botched
          embedding will allow better use of css in the attributes
  -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" style="display:none">
  <defs>
    <!-- TODO: embeded_images -->
    <g id="user" width="45" height="50">
      <path d="M31.77 31.35C35.78 28.21 39.46 22.68 39.46 17.19 39.46 7.7 31.73 0 22.19 0 12.65 0 4.91 7.7 4.91 17.19 4.91 22.68 8.81 28.32 12.83 31.46 5.63 35.12 0.56 41.57 0 50.02L1.83 50.02C2.44 42.1 7.61 35.47 14.73 32.68 16.99 33.77 19.51 34.39 22.19 34.39 24.87 34.39 27.39 33.77 29.65 32.68 36.77 35.47 41.94 42.1 42.54 50.02L44.38 50.02C43.82 41.57 38.97 35.01 31.77 31.35M22.19 32.57C14.38 32.57 6.74 24.96 6.74 17.19 6.74 9.42 14.38 1.81 22.19 1.81 30 1.81 37.63 9.42 37.63 17.19 37.63 24.96 30 32.57 22.19 32.57Z"/>
    </g>
  </defs>
</svg>
<div id="diagram">
<%= body %>
</div>
<div id="desc-wrap">
  <div id="desc">
    <p>a</p>
    <p>b</p>
  </div>
</div>
<script>
/* selecting an edge is difficult */
/* instead of relying upon mouseover/mouseout, having mouseover sticky */

var current_node = null;
var old_nodes=[];

/* used for hilighting */
function markClass(id, className) {
  if (id && className) {
    d3.select("#"+id).classed(className, true)
    old_nodes.push(["#"+id, className]);
  }
}

function cleanupEdge(id) {
  // cleanup last highlight
  while(node = old_nodes.pop()) {
    d3.select(node[0]).classed(node[1], false);
  }
}

function displayEdge(id) {
  markClass(id, 'src-dest');
  // these are going away - infoText should provide everything
  var ids = id.split('_');
  markClass(ids[0], 'src');
  markClass(ids[1], 'dest');

  var info = d3.select("#"+id+" a")
  if (info) {
    info = info.attr("xlink:title");
    console.debug(id, "info", info);
  }
  // just display everything for now (in future, only attr that have no ':')
  var infoText = (info || "");

  if (info) {
    var attrs = info.split("|")
    for(var attr_num = 0; attr_num < attrs.length ; attr_num++) {
      var attr = attrs[attr_num].trim();
      attr_parts = attr.split(":")
      markClass(attr_parts[1], attr_parts[0]);
    }
  }
  //console.debug(id, "infoText", infoText);
  d3.select("#desc").html(infoText);

  // debug only
  for(var i=0; i< old_nodes.length ; i++) {
    console.debug(id, old_nodes[i])
  }
}

d3.selectAll(".node").on('mouseover', function() {
  d3.select(this).classed('active', true)
}).on('mouseout', function() {
  d3.select(this).classed('active', false)
});

/* since it is hard to highlight, doing mouseout/mouseover when mouseover a new edge */
d3.selectAll(".edge").on('mouseover', function() {
  if (this.id != current_node) {
    cleanupEdge(current_node);
    current_node = this.id;
    displayEdge(this.id);
  }
}); 
</script>
</body>
